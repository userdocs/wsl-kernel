name: wsl kernel build

on:
  workflow_dispatch:
    inputs:
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: true
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "1"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  packages: write
  contents: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - linux-msft-wsl-6.6.y
          - linux-msft-wsl-5.15.y

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Host - docker builder
        run: docker run --name builder -it -d -u 1001 -v ${{ github.workspace }}:/home/github ghcr.io/userdocs/wsl-kernel:latest

      - name: Clone branch
        run: git clone --depth=1 -b "${{ matrix.branch }}" https://github.com/microsoft/WSL2-Linux-Kernel.git WSL2-Linux-Kernel

      - name: Set variables
        working-directory: WSL2-Linux-Kernel
        run: |
          printf '%s\n' "kernel_version=$(sed -rn 's/^VERSION = (.*)/\1/p' Makefile).$(sed -rn 's/^PATCHLEVEL = (.*)/\1/p' Makefile).$(sed -rn 's/^SUBLEVEL = (.*)/\1/p' Makefile)$(sed -rn 's/^EXTRAVERSION = (.*)/\1/p' Makefile)" >> $GITHUB_ENV
          printf '%s\n' "release_tag=$(date +"%d%m")" >> $GITHUB_ENV

      - name: make kernel
        run: docker exec -w /home/github/WSL2-Linux-Kernel builder make -j$(nproc) KCONFIG_CONFIG=/home/github/configs/${{ matrix.branch }}/config-wsl

      - name: make kernel modules and headers
        run: docker exec -w /home/github/WSL2-Linux-Kernel builder make -j$(nproc) INSTALL_MOD_PATH=modules_headers modules_install INSTALL_HDR_PATH=modules_headers headers_install

      - name: archive kernel modules and headers
        run: cd WSL2-Linux-Kernel/modules_headers && tar -cvJf ${{ github.workspace }}/modules_headers.tar.xz *

      - name: rename kernel modules and headers
        run: |
          cp modules_headers.tar.xz ${{ matrix.branch }}-modules_headers.tar.xz
          cp modules_headers.tar.xz ${{ env.kernel_version }}-modules_headers.tar.xz

      - name: rename kernel
        run: |
          cp WSL2-Linux-Kernel/arch/x86/boot/bzImage ${{ matrix.branch }}-bzImage
          cp WSL2-Linux-Kernel/arch/x86/boot/bzImage ${{ env.kernel_version }}-bzImage

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: |
            modules_headers.tar.xz
            ${{ matrix.branch }}-modules_headers.tar.xz
            ${{ env.kernel_version }}-modules_headers.tar.xz

            WSL2-Linux-Kernel/arch/x86/boot/bzImage
            ${{ matrix.branch }}-bzImage
            ${{ env.kernel_version }}-bzImage

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          artifacts: ${{ matrix.branch }}-bzImage,${{ env.kernel_version }}-bzImage,${{ matrix.branch }}-modules_headers.tar.xz,${{ env.kernel_version }}-modules_headers.tar.xz
          replacesArtifacts: true
          tag: ${{ env.release_tag }}
          name: wsl custom kernel builds
          allowUpdates: true
          token: ${{ github.token }}

  rerun-on-failure:
    if: failure() && inputs.skip_rerun == '0'
    name: rerun-on-failure
    needs: build
    permissions:
      actions: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ github.TOKEN }}"
    steps:
      - uses: actions/checkout@v4
      - name: Trigger rerun workflow on job failures
        run: |
          inputs_retries="${{ inputs.retries }}"
          gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${inputs_retries:-1}
